name: Build and Push OCI container images

on:
  push:
    branches:
      - master

permissions:
  contents: read
  packages: write

jobs:
  build:
    environment: default
    strategy:
      fail-fast: false
      matrix:
        include:
          # X86 platforms
          - platform: linux/386
            runs-on: ubuntu-24.04
          - platform: linux/amd64
            runs-on: ubuntu-24.04
          - platform: linux/amd64/v2
            runs-on: ubuntu-24.04
          - platform: linux/amd64/v3
            runs-on: ubuntu-24.04
          # ARM platforms
          - platform: linux/arm/v6
            runs-on: ubuntu-24.04-arm
          - platform: linux/arm/v7
            runs-on: ubuntu-24.04-arm
          - platform: linux/arm64
            runs-on: ubuntu-24.04-arm
          # RISC-V platforms
          - platform: linux/riscv64
            runs-on: ubuntu-24.04
          # IBM platforms
          - platform: linux/s390x
            runs-on: ubuntu-24.04
          - platform: linux/ppc64le
            runs-on: ubuntu-24.04
    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Check Out Repository
        uses: actions/checkout@v5.0.0

      - name: Lowercase GitHub repo name
        id: repo
        run: |
          echo "name=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT

      - name: Set up platform pairs
        id: platform
        run: |
          platform=${{ matrix.platform }}
          echo "pair=${platform//\//-}" >> $GITHUB_OUTPUT

      - name: Set up QEMU for Docker Buildx
        uses: docker/setup-qemu-action@v3.6.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.11.1

      - name: Generate Docker image metadata
        id: meta
        uses: docker/metadata-action@v5.8.0
        with:
          images: |
            docker.io/${{ steps.repo.outputs.name }}
            ghcr.io/${{ steps.repo.outputs.name }}

      - name: Login to Docker Hub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3.5.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6.18.0
        with:
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,"name=ghcr.io/${{ steps.repo.outputs.name }},docker.io/${{ steps.repo.outputs.name }}",push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4.6.2
        with:
          name: digests-${{ steps.platform.outputs.pair }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

      - name: Get Git version in Dockerfile
        id: version
        run: |
          export VERSION=$(cat Dockerfile | sed -n 's/.*ARG GIT_VERSION=\([0-9.]*\).*/\1/p')
          echo "major=$(echo $VERSION | cut -d. -f1)" >> $GITHUB_OUTPUT
          echo "minor=$(echo $VERSION | cut -d. -f2)" >> $GITHUB_OUTPUT
          echo "patch=$(echo $VERSION | cut -d. -f3)" >> $GITHUB_OUTPUT
    outputs:
      major: ${{ steps.version.outputs.major }}
      minor: ${{ steps.version.outputs.minor }}
      patch: ${{ steps.version.outputs.patch }}

  merge:
    runs-on: ubuntu-24.04
    environment: default
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v5.0.0
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to Docker Hub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3.5.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1

      - name: Lowercase GitHub repo name
        id: repo
        run: |
          echo "name=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT

      - name: Generate Docker image metadata
        id: meta
        uses: docker/metadata-action@v5.8.0
        with:
          images: |
            ghcr.io/${{ steps.repo.outputs.name }}
            docker.io/${{ steps.repo.outputs.name }}
          tags: |
            ${{ needs.build.outputs.major }}
            ${{ needs.build.outputs.major }}.${{ needs.build.outputs.minor }}
            ${{ needs.build.outputs.major }}.${{ needs.build.outputs.minor }}.${{ needs.build.outputs.patch }}

            type=sha,prefix=${{ needs.build.outputs.major }}-,suffix=,format=short
            type=sha,prefix=${{ needs.build.outputs.major }}-,suffix=,format=long
            type=sha,prefix=${{ needs.build.outputs.major }}.${{ needs.build.outputs.minor }}-,suffix=,format=short
            type=sha,prefix=${{ needs.build.outputs.major }}.${{ needs.build.outputs.minor }}-,suffix=,format=long
            type=sha,prefix=${{ needs.build.outputs.major }}.${{ needs.build.outputs.minor }}.${{ needs.build.outputs.patch }}-,suffix=,format=short
            type=sha,prefix=${{ needs.build.outputs.major }}.${{ needs.build.outputs.minor }}.${{ needs.build.outputs.patch }}-,suffix=,format=long

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf 'ghcr.io/${{ steps.repo.outputs.name }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ghcr.io/${{ steps.repo.outputs.name }}:${{ steps.meta.outputs.version }}
