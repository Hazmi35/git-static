name: Build & Push OCI Image to OCI Image Registry

on:
  workflow_call:
    inputs:
      runs-on:
        # https://github.com/orgs/community/discussions/26801
        description: 'Type of machine of job to run on. Needs to be quoted, because to support self-hosted labels and inputs does not support Array nor multiple types (default: "ubuntu-latest")'
        type: string
        default: '"ubuntu-latest"'
        required: false
      platforms:
        description: 'Platforms to build the image for. In JSON format. (default: ["linux/amd64"])'
        type: string
        default: 'linux/amd64'
        required: false

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ${{ fromJson(inputs.runs-on) }}
    strategy:
      matrix:
        platform: ${{ fromJson(inputs.platforms) }}

    steps:
      - name: Check Out Repository
        uses: actions/checkout@v4.2.2

      - name: Set up QEMU for Docker Buildx
        uses: docker/setup-qemu-action@v3.6.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Get Git version in Dockerfile
        id: git
        run: |
          export VERSION=$(cat Dockerfile | sed -n 's/.*ARG GIT_VERSION=\([0-9.]*\).*/\1/p')
          echo "MAJOR=$(echo $VERSION | cut -d. -f1)" >> $GITHUB_OUTPUT
          echo "MINOR=$(echo $VERSION | cut -d. -f2)" >> $GITHUB_OUTPUT
          echo "PATCH=$(echo $VERSION | cut -d. -f3)" >> $GITHUB_OUTPUT

      - name: Generate Docker image metadata
        uses: docker/metadata-action@v5.7.0
        id: meta
        with:
          images: |
            docker.io/${{ github.repository }}
            ghcr.io/${{ github.repository }}
          tags: |
            ${{ steps.git.outputs.MAJOR }}
            ${{ steps.git.outputs.MAJOR }}.${{ steps.git.outputs.MINOR }}
            ${{ steps.git.outputs.MAJOR }}.${{ steps.git.outputs.MINOR }}.${{ steps.git.outputs.PATCH }}

            type=sha,prefix=${{ steps.git.outputs.MAJOR }}-,suffix=,format=short
            type=sha,prefix=${{ steps.git.outputs.MAJOR }}-,suffix=,format=long
            type=sha,prefix=${{ steps.git.outputs.MAJOR }}.${{ steps.git.outputs.MINOR }}-,suffix=,format=short
            type=sha,prefix=${{ steps.git.outputs.MAJOR }}.${{ steps.git.outputs.MINOR }}-,suffix=,format=long
            type=sha,prefix=${{ steps.git.outputs.MAJOR }}.${{ steps.git.outputs.MINOR }}.${{ steps.git.outputs.PATCH }}-,suffix=,format=short
            type=sha,prefix=${{ steps.git.outputs.MAJOR }}.${{ steps.git.outputs.MINOR }}.${{ steps.git.outputs.PATCH }}-,suffix=,format=long

      - name: Build and push the Docker image from the specified Dockerfile
        id: build
        uses: docker/build-push-action@v6.15.0
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4.6.2
        with:
          name: digests-${{ matrix.platform }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1