name: Build & Push OCI Image to OCI Image Registry

on:
  push:
    branches:
      - master

permissions:
  contents: read
  packages: write

jobs:
  x86:
    uses: ./.github/workflows/build.yaml
    with:
      runs-on: '"ubuntu-24.04"'
      platforms: '["linux/386", "linux/amd64", "linux/amd64/v2", "linux/amd64/v3"]'
    secrets: inherit
  # arm:
  #   uses: ./.github/workflows/build.yaml
  #   with:
  #     runs-on: '"ubuntu-24.04-arm"'
  #     platforms: '["linux/arm/v6", "linux/arm/v7", "linux/arm64/v8"]'
  #   secrets: inherit
  # riscv:
  #   uses: ./.github/workflows/build.yaml
  #   with:
  #     runs-on: '"ubuntu-24.04"'
  #     platforms: '["linux/riscv64"]'
  #   secrets: inherit
  # ppc:
  #   uses: ./.github/workflows/build.yaml
  #   with:
  #     runs-on: '"ubuntu-24.04"'
  #     platforms: '["linux/ppc64le"]'
  #   secrets: inherit
  # s390:
  #   uses: ./.github/workflows/build.yaml
  #   with:
  #     runs-on: '"ubuntu-24.04"'
  #     platforms: '["linux/s390x"]'
  #   secrets: inherit
  push:
    runs-on: ubuntu-latest
    environment: default
    needs: [x86]
    steps:
      - name: Check Out Repository
        uses: actions/checkout@v4.2.2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Download digests
        uses: actions/download-artifact@v4.2.1
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to Docker Hub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3.4.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Git version in Dockerfile
        id: git
        run: |
          export VERSION=$(cat Dockerfile | sed -n 's/.*ARG GIT_VERSION=\([0-9.]*\).*/\1/p')
          echo "MAJOR=$(echo $VERSION | cut -d. -f1)" >> $GITHUB_OUTPUT
          echo "MINOR=$(echo $VERSION | cut -d. -f2)" >> $GITHUB_OUTPUT
          echo "PATCH=$(echo $VERSION | cut -d. -f3)" >> $GITHUB_OUTPUT

      - name: Generate Docker image metadata
        uses: docker/metadata-action@v5.7.0
        id: meta
        with:
          images: |
            docker.io/${{ github.repository }}
            ghcr.io/${{ github.repository }}
          tags: |
            ${{ steps.git.outputs.MAJOR }}
            ${{ steps.git.outputs.MAJOR }}.${{ steps.git.outputs.MINOR }}
            ${{ steps.git.outputs.MAJOR }}.${{ steps.git.outputs.MINOR }}.${{ steps.git.outputs.PATCH }}

            type=sha,prefix=${{ steps.git.outputs.MAJOR }}-,suffix=,format=short
            type=sha,prefix=${{ steps.git.outputs.MAJOR }}-,suffix=,format=long
            type=sha,prefix=${{ steps.git.outputs.MAJOR }}.${{ steps.git.outputs.MINOR }}-,suffix=,format=short
            type=sha,prefix=${{ steps.git.outputs.MAJOR }}.${{ steps.git.outputs.MINOR }}-,suffix=,format=long
            type=sha,prefix=${{ steps.git.outputs.MAJOR }}.${{ steps.git.outputs.MINOR }}.${{ steps.git.outputs.PATCH }}-,suffix=,format=short
            type=sha,prefix=${{ steps.git.outputs.MAJOR }}.${{ steps.git.outputs.MINOR }}.${{ steps.git.outputs.PATCH }}-,suffix=,format=long

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf 'docker.io/hazmi35/git-static@sha256:%s ' *)